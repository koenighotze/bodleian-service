name: Deploy tagged version
on:
#  workflow_run:
#    workflows: ["Build main"]
#    types:
#      - completed
  workflow_dispatch:

permissions:
  contents: read
  # pull-requests: read

env:
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && startsWith(github.event.ref, 'refs/tags/v')

    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
          token_format: "access_token"
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v1.0.1
      - name: Setting up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build image name
        run: ./scripts/build-image-name.sh
      - run: echo "Should deploy ${{ env.image-name}}"
#      - name: Deploying to Cloud Run
#        id: deploy
#        uses: google-github-actions/deploy-cloudrun@v0.10.0
#        with:
#          image: ${{ env.image-name }}
#          service: ${{ secrets.CLOUD_RUN_SERVICE }}
#          region: ${{ secrets.CLOUD_RUN_REGION }}
#          timeout: 30 # allow enough time to startup container
#          no_traffic: true
#          tag: main-latest
#      - name: Authenticating
#        id: auth
#        uses: google-github-actions/auth@v0.7.3
#        with:
#          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
#          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
#          token_format: id_token
#          id_token_audience: ${{ steps.deploy.outputs.url }}
#          id_token_include_email: true
#          create_credentials_file: false
#          export_environment_variables: false
#      - name: Testing if service is up
#        run: |
#          echo "Testing if ${{ steps.push.outputs.image-name }} is up at ${{ steps.deploy.outputs.url }}"
#          curl ${{ steps.deploy.outputs.url }}/health \
#            --header "Authorization: Bearer ${{ steps.auth.outputs.id_token }}"
