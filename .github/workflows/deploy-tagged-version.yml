name: Deploy tagged version

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      image-name:
        required: true
        description: "The name of the image that should be deployed, e.g., eu.gcr.io/<projectid>/koenighotze/bodleian:v0.0.25"

env:
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

permissions:
  id-token: write

jobs:
  build-and-deploy-container:
    needs:
      - test
      - security-scan-code

    permissions:
      id-token: write

    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
          token_format: "access_token"
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.6.0
      - name: Setting up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Containerizing
        id: containerizing
        run: ./scripts/containerize.sh
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.5.0
        with:
          image-ref: ${{ steps.containerizing.outputs.image-name }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Pushing image
        id: push
        run: ./scripts/containerize.sh
        env:
          OUTPUT_MODE: push
      - name: Deploying to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.10.0
        with:
          image: ${{ steps.push.outputs.image-name }}
          service: ${{ secrets.CLOUD_RUN_SERVICE }}
          region: ${{ secrets.CLOUD_RUN_REGION }}
          timeout: 30 # allow enough time to startup container
          no_traffic: true
          tag: main-latest
      - name: Check if service is up
        run: |
          curl -H "Authorization: Bearer $(gcloud auth print-identity-token)" "${{ steps.deploy.outputs.url }}/health"
