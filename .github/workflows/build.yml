name: Build main

on:
  push:
    branches: [main]
    tags-ignore: ["**"]
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3
      - name: Testing
        run: |
          mvn -B test
          mvn jacoco:report
      # - name: Uploading coverage
      #   uses: codacy/codacy-coverage-reporter-action@v1
      #   with:
      #     api-token: ${{ secrets.CODACY_API_TOKEN }}
      #     coverage-reports: ./target/site/jacoco/jacoco.xml
      #   env:
      #     CODACY_PROJECT_NAME: "bodleian-service-tmp"
      #     CODACY_ORGANIZATION_PROVIDER: "gh"
      #     CODACY_USERNAME: "${{ github.repository_owner }}"

  build-container:
    needs:
      - test

    permissions:
      id-token: write

    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.6.0
      - name: Containerizing
        id: containerizing
        run: ./scripts/containerize.sh
      - name: Deploying to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.10.0
        with:
          image: ${{steps.containerizing.outputs.image-name }}
          service: ${{ secrets.CLOUD_RUN_SERVICE }}
          region: ${{ secrets.CLOUD_RUN_REGION }}
          timeout: 30 # allow enough time to startup container
          no_traffic: true
          tag: main-latest
      - name: Check if service is up
        run: |
          curl -H "Authorization: Bearer $(gcloud auth print-identity-token)" "${{ steps.deploy.outputs.url }}/actuator/health"
